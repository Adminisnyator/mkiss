#!/bin/sh -uxe
export DESTDIR="$1"

# Get commits from known_good.json
export SPIRV_TOOLS_COMMIT=$(jq -r '.commits[0].commit' < known_good.json)
export SPIRV_HEADERS_COMMIT=$(jq -r '.commits[1].commit' < known_good.json)

# Clone commits into subdirectories
mkdir External/spirv-tools
pushd External/spirv-tools
git init
git remote add origin https://github.com/KhronosGroup/Spirv-Tools 
git fetch --depth=1 origin $SPIRV_TOOLS_COMMIT
git reset --hard FETCH_HEAD
popd

mkdir External/spirv-tools/external/spirv-headers
pushd External/spirv-tools/external/spirv-headers
git init
git remote add origin https://github.com/KhronosGroup/Spirv-Headers 
git fetch --depth=1 origin $SPIRV_HEADERS_COMMIT
git reset --hard FETCH_HEAD
popd

cmake -B build-shared -G Ninja \
    -D CMAKE_INSTALL_PREFIX=/usr \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_INSTALL_LIBDIR=lib \
    -D BUILD_SHARED_LIBS=ON

ninja -C build-shared

cmake -B build-static -G Ninja \
    -D CMAKE_INSTALL_PREFIX=/usr \
    -D CMAKE_BUILD_TYPE=Release \
    -D CMAKE_INSTALL_LIBDIR=lib \
    -D BUILD_SHARED_LIBS=OFF
ninja -C build-static

ninja -C build-shared install
ninja -C build-static install

cd "$1/usr/lib"

for lib in *.so; do
    ln -sf ${lib} ${lib}.0
done

# Delete the vendored-in stuff
mv "$1/usr/bin/spirv-remap" .
rm -r "$1"/usr/{bin/spirv*,include/spirv-tools,lib/cmake/SPIRV-Tools*,lib/libSPIRV-*,lib/pkgconfig}
mv spirv-remap "$1/usr/bin/spirv-remap"
